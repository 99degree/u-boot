
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/clock/qcom,gcc-sdm845.h>

/delete-node/ &pcie0_3p3v_dual;
/* Our pinctrl implementation doesn't play nice here for some reason */
/delete-node/ &pcie0_pwren_state;

/ {
	/* U-Boot uses different bindings for GPIO regulators, this
	 * one is required for USB
	 */
	pcie0_3p3v_dual: vldo-3v3-regulator {
		compatible = "regulator-gpio";
		regulator-name = "VLDO_3V3";

		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;

		enable-gpios = <&tlmm 90 GPIO_ACTIVE_HIGH>;
		enable-active-high;
		states = <0 0>, <3300000 1>;
	};

	memory@80000000 {
		device_type = "memory";
		reg = <0 0x80000000 0 0xfdfa0000>;
	};
};

&sdhc_2 {
	status = "okay";

	/* Remove the RPMh clock reference */
	clocks = <&gcc GCC_SDCC2_AHB_CLK>,
		 <&gcc GCC_SDCC2_APPS_CLK>;
	clock-names = "iface", "core";

	/* U-Boot can't automatically set the clock frequency */
	clock-frequency = <200000000>;

	bus-width = <4>;
	/* Hot plug is finnicky */
	non-removable;
};

/*
 * We only support USB high-speed, disable SS capabilities
 * and configure the hardware for USB high-speed.
 */
&usb_1 {
	qcom,select-utmi-as-pipe-clk;
};

&usb_1_dwc3 {
	dr_mode = "peripheral";

	/* We don't support superspeed in u-boot so remove the SSPHY */
	phys = <&usb_1_hsphy>;
	phy-names = "usb2-phy";

	/* fastest mode for USB 2 */
	maximum-speed = "high-speed";
};

&usb_1_hsphy {
	/* Remove ref clk because rmphcc isn't available */
	clocks = <&gcc GCC_USB_PHY_CFG_AHB2PHY_CLK>;
	clock-names = "cfg_ahb";
};

&usb_2 {
	qcom,select-utmi-as-pipe-clk;
};

&usb_2_dwc3 {
	dr_mode = "host";

	/* We don't support superspeed in u-boot so remove the SSPHY */
	phys = <&usb_2_hsphy>;
	phy-names = "usb2-phy";

	/* fastest mode for USB 2 */
	maximum-speed = "high-speed";

	/* Upstream DT just makes this regulator always-on */
	vbus-supply = <&pcie0_3p3v_dual>;
};

&usb_2_hsphy {
	/* Remove ref clk because rmphcc isn't available */
	clocks = <&gcc GCC_USB_PHY_CFG_AHB2PHY_CLK>;
	clock-names = "cfg_ahb";
};

